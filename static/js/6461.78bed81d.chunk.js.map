{"version":3,"file":"static/js/6461.78bed81d.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import o from\"./PixelBlock.js\";import{decode as s}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as i,split as a,mosaic as n,approximateTransform as l,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{convertVectorFieldData as u,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as S}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createStreamlinesMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import y from\"../../geometry/Extent.js\";class O{convertVectorFieldData(e){const t=o.fromJSON(e.pixelBlock),s=u(t,e.type);return Promise.resolve(r(s)&&s.toJSON())}async decode(r){const e=await s(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=o.fromJSON(e.pixelBlock),e.extent=e.extent?y.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)&&t.toJSON())}async updateSymbolizer(r){var e;this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(e=this.symbolizer)?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const t=this.symbolizer.simpleStretch(o.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=i(o.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=a(o.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,null==r?void 0:r.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){var t;const s=r.srcPixelBlocks.map((r=>r?new o(r):null)),i=n(s,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,c=i;return r.coefs&&(c=l(i,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=m(r.destDimension,r.gcsGrid),c=e(d(c,r.isUV?\"vector-uv\":\"vector-magdir\",a))),{pixelBlock:null==(t=c)?void 0:t.toJSON(),localNorthDirections:a}}async createStreamlinesMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),width:r.flowData.width,height:r.flowData.height},{vertexData:o,indexData:s}=await x(r.rendererSettings,t,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:s.buffer},transferList:[o.buffer,s.buffer]}}async getProjectionOffsetGrid(r){const e=y.fromJSON(r.projectedExtent),o=y.fromJSON(r.srcBufferExtent);let s=null;r.datumTransformationSteps&&(s=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,o.spatialReference,s))&&await f();const i=r.rasterTransform?S(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:o,datumTransformation:s,rasterTransform:i})}}export{O as default};\n"],"names":["O","e","t","o","pixelBlock","s","u","type","Promise","resolve","r","toJSON","data","options","extent","y","this","symbolizer","symbolize","h","symbolizerJSON","histograms","rendererJSON","simpleStretch","srcPixelBlock","stretchParams","i","a","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","n","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","c","coefs","l","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","m","d","isUV","localNorthDirections","Float32Array","flowData","buffer","width","height","x","rendererSettings","signal","vertexData","indexData","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","f","rasterTransform","S","p","datumTransformation"],"sourceRoot":""}